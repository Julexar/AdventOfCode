import{iter as n}from"@iterable-iterator/iter";import{consume as t}from"@iterable-iterator/consume";import{deque as e}from"@data-structure/deque";function*o(e,o){const r=n(e);t(r,o),yield*r}function*r(n,t){yield*e(n,t)}function*i(t,e){const o=n(t);for(;e-- >0;){const n=o.next();if(n.done)return;yield n.value}}function*f(t,o){if(0===o)return void(yield*t);const r=n(t),i=e(null,o);for(;o-- >0;){const n=r.next();if(n.done)return;i.append(n.value)}for(const n of r)yield i.popleft(),i.append(n)}function u(n,t){return t<0?r(n,-t):o(n,t)}function*c(t,e){const o=n(e);for(const n of o)if(!t(n))return yield n,void(yield*o)}function d(n,t){return t<0?f(n,-t):i(n,t)}var l=d;function*a(t,e,o,r){const i=n(t);for(;e>0;){if(i.next().done)return;--e,--o}for(;o>0;){const n=i.next();if(n.done)return;yield n.value,--o;let t=r;for(;t>1;){if(i.next().done)return;--t}}}function s(n,t){return t<0?o(n,-t):r(n,t)}function*p(n,t){for(const e of t){if(!n(e))return;yield e}}function y(n,t){return t<0?i(n,-t):f(n,t)}export{o as _drop,r as _tail,i as _take,f as _trunc,u as drop,c as dropwhile,l as head,a as slice,s as tail,d as take,p as takewhile,y as trunc};
//# sourceMappingURL=index.modern.js.map
