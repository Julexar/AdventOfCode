class e{constructor(e){this.value=e,this.prev=null,this.next=null,this.children=new n}}class n{constructor(){this.next=null}}function t(e,n){return n.prev=e.children,n.next=e.children.next,e.children.next=n,null!==n.next&&(n.next.prev=n),e}function r(e,n,r){return e(n.value,r.value)<0?t(n,r):t(r,n)}function l(e,n){const t=n.next;if(n.next=null,null===t)return null;t.prev=null;const i=t.next;if(t.next=null,null===i)return t;i.prev=null;const u=l(e,i),s=r(e,t,i);return null===u?s:r(e,s,u)}function i(e,n,t,l){return t.value=l,t.prev.next=t.next,null!==t.next&&(t.next.prev=t.prev,t.next=null),t.prev=null,r(e,n,t)}class u{constructor(e){this.compare=e,this.min=null}head(){if(null!==this.min)return this.min.value}headreference(){return this.min}pop(){const e=this.popreference();return null===e?void 0:e.value}popreference(){if(null===this.min)return null;const e=this.min;return this.min=l(this.compare,e.children),e}push(n){const t=new e(n);return this.pushreference(t)}pushreference(e){return this.min=null===this.min?e:r(this.compare,this.min,e),e}merge(e){const n=e.min;null!==n&&this.pushreference(n)}update(e,n){const t=this.compare(n,e.value);t<0?this.decreasekey(e,n):t>0?this.increasekey(e,n):e.value=n}decreasekey(e,n){e===this.min?e.value=n:this.min=i(this.compare,this.min,e,n)}increasekey(e,n){this.delete(e),e.value=n,this.pushreference(e)}delete(e){if(e===this.min)return void this.popreference();const n=l(this.compare,e.children);if(null===n)return e.prev.next=e.next,null!==e.next&&(e.next.prev=e.prev,e.next=null),void(e.prev=null);n.prev=e.prev,n.prev.next=n,e.prev=null,null!==e.next&&(n.next=e.next,n.next.prev=n,e.next=null)}}export{e as Node,u as PairingHeap,i as decreasekey,r as merge,l as mergepairs,t as prepend};
//# sourceMappingURL=index.modern.js.map
